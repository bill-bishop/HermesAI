services:
  database:
    build: ./apps/database
    container_name: hermesai-db
    expose:
      - "5432"
    environment:
      POSTGRES_DB: hermesaidb
      POSTGRES_USER: hermesai_user
      POSTGRES_PASSWORD: secret
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./apps/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hermesnet

  backend:
    build: ./apps/execution-sandbox/sandbox_server
    container_name: hermesai-backend
    depends_on:
      - database
    environment:
      DATABASE_URL: postgres://hermesai_user:secret@database:5432/hermesaidb
      PYTHONUNBUFFERED: 1
    expose:
      - "8080"
    volumes:
      - ./apps/execution-sandbox:/app
    networks:
      - hermesnet
    command: ["python", "-m", "sandbox_server.app"]

  frontend:
    build: ./apps/dropcode-client
    container_name: hermesai-frontend
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
    command: ["nginx", "-g", "daemon off;"]
    expose:
      - "80"
    networks:
      - hermesnet

  router:
    build: ./apps/execution-sandbox/terminal
    container_name: hermesai-router
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./apps/execution-sandbox/terminal/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot               # <-- CHALLENGE FILES
      - ./certbot/conf:/etc/letsencrypt              # <-- CERT STORAGE
    networks:
      - hermesnet
    environment:
      - ROUTER_MODE=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  certbot:
    image: certbot/certbot
    container_name: hermesai-certbot
    depends_on:
      - router
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: >
      sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot
      --email your@email.com --agree-tos --no-eff-email
      -d hermesai.dev"
    networks:
      - hermesnet


volumes:
  db_data:

networks:
  hermesnet:
    driver: bridge
  bridge:
    driver: bridge
