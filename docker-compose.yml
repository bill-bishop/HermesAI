services:
  database:
    image: whb4118/hermesai-db:0.0.1
#    build: ./apps/database
    container_name: hermesai-db
    expose:
      - "5432"
    environment:
      POSTGRES_DB: hermesaidb
      POSTGRES_USER: hermesai_user
      POSTGRES_PASSWORD: secret
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./apps/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hermesnet

  agent-api:
    image: whb4118/hermesai-api:latest
    #    build: ./apps/pty
    container_name: hermesai-api
    volumes:
      - ${TOKEN_MAP_PATH:-./4d24721f7fe5084b6f4e0c93eca86954}:/4d24721f7fe5084b6f4e0c93eca86954:ro
    expose:
      - "8081"
    networks:
      - hermesnet
    environment:
      - RUST_LOG=debug

  grace-pty:
    image: whb4118/hermesai-pty:latest
    #    build: ./apps/pty
    container_name: hermesai-grace-pty
    working_dir: /sandbox
    volumes:
      - ${GRACE_SANDBOX_VOLUME:-../grace-sandbox}:/sandbox
    expose:
      - "8080"
    networks:
      - hermesnet


  will-pty:
    image: whb4118/hermesai-pty:latest
#    build: ./apps/pty
    container_name: hermesai-will-pty
    working_dir: /sandbox
    volumes:
      - ${WILL_SANDBOX_VOLUME:-../will-sandbox}:/sandbox
    expose:
      - "8080"
    networks:
      - hermesnet


  backend:
    image: whb4118/hermesai-flask:0.0.1
#    build: ./apps/execution-sandbox/sandbox_server
    container_name: hermesai-backend
    depends_on:
      - database
    environment:
      DATABASE_URL: postgres://hermesai_user:secret@database:5432/hermesaidb
      PYTHONUNBUFFERED: 1
    expose:
      - "8080"
    networks:
      - hermesnet
    command: ["python", "-m", "sandbox_server.app"]

  frontend:
    image: whb4118/hermesai-client:0.0.1
#    build: ./apps/dropcode-client
    container_name: hermesai-frontend
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
    command: ["nginx", "-g", "daemon off;"]
    expose:
      - "80"
    networks:
      - hermesnet

  router:
    image: whb4118/hermesai-router:latest
#    build: ./apps/execution-sandbox/terminal
    container_name: hermesai-router
    depends_on:
      - frontend
      - backend
      - agent-api
      - certbot
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot/www:/var/www/certbot               # <-- CHALLENGE FILES
      - ./certbot/conf:/etc/letsencrypt              # <-- CERT STORAGE
    networks:
      - hermesnet
    environment:
      - ROUTER_MODE=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  # self-signed cert
  certbot:
    image: alpine:latest
    container_name: hermesai-selfsigned
    entrypoint: >
      sh -c "apk add --no-cache openssl &&
      mkdir -p /etc/letsencrypt/live/hermesai.dev &&
      openssl req -x509 -nodes -days 365 -subj '/CN=hermesai.dev' -newkey rsa:2048 -keyout /etc/letsencrypt/live/hermesai.dev/privkey.pem -out /etc/letsencrypt/live/hermesai.dev/fullchain.pem"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
    networks:
      - hermesnet


volumes:
  db_data:

networks:
  hermesnet:
    driver: bridge
  bridge:
    driver: bridge
